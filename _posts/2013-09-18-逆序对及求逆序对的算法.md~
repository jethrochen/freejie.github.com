---
layout: post
categories: [algorithms]
tags: [algorithms, 逆序数，归并排序]
---

###{{ page.title }}###

> **逆序对：**  
> 设 A 为一个有 n 个数字的有序集 (n>1)，其中所有数字各不相同。  
> 如果存在正整数 i, j 使得 1 ≤ i < j ≤ n 而且 A[i] > A[j]，则 <A[i], A[j]> 这个有序对就为 A 的一个逆序对，也称作逆序数。  
> 例如：数组 <2,3,8,6,1> 的逆序对为：<2,1> <3,1> <8,6> <8,1> <6,1> 总数共5个。  

以上是来自维基百科对逆序对的定义。有定理：  
>n 个不同的数做排列 $$p_1p_2p_3...p_n$$ ，这个排列中逆序对的个数为  

$$
t = t_1 + t_2 + t_3 + ... + t_n = \sum_{i=1}^n{t_i}
$$

$$t_i$$ 为排列中位于 $$p_i$$ 前且小于 $$p_i$$ 的数的个数  

根据此定理,很容易求出一个排列中逆序数的个数，例如：排列 2 5 3 9 7 6 中，$$t_1=0,t_2=0,t_3=1,t_4=0,t_5=1,t_6=2$$,这个排列中逆序数的个数为 $$0+0+1+0+1+2=4$$ 。  
这个可以作为求逆序对个数的基本算法  
{% highlight cpp linenos %}
int nixu(int arr[], int len)
{
    int i, j;
    int sum = 0;

    for (i = 0; i < len; ++i)
    {
        for (j = 0; j < i; ++j)
        {
            if (arr[j] > arr[i])
                sum += 1;
        }
    }

    return sum;
}
{% endhighlight %}


